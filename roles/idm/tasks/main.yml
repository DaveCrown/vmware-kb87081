---
- name: get idm_service state
  shell: "ps aux | grep formatMsgNoLookups"
  register: idm_output
  changed_when: false

- name: set check_varible
  set_fact:
    idm_service_fixed: "{{  idm_output.stdout is search ('-Dlog4j2.formatMsgNoLookups=true') }}"
  changed_when: false
  
- name: check for backup file
  stat:
    path: "{{ base_file }}.bak"
  register: idm_backup_stat
  changed_when: false

- name: chuck a rod if already ran
  assert:
    that: idm_backup_stat.stat.exists == false
    fail_msg: "Backup exists, and the wrapper file is vulnerable"
    success_msg: "No previous backup"
  when: not idm_service_fixed

- name: backup wrapper file
  copy:
    src: "{{ base_file }}"
    dest: "{{ base_file }}.bak"
    remote_src: yes
  when:
    - not idm_service_fixed
    - idm_backup_stat.stat.exists == false
  
- name: update launch parameters for jvm
  lineinfile:
    path: "{{ base_file }}"
    insertbefore: '\$DEBUG_OPTS \'
    line: -Dlog4j2.formatMsgNoLookups=true
  notify:
    - stop_idm_service
    - start_idm_service
  when:
    - not idm_service_fixed
    - idm_backup_stat.stat.exists == false

- name: kick the services over
  meta: flush_handlers

- name: get idm_service state
  shell: "ps aux | grep formatMsgNoLookups"
  register: idm_output
  changed_when: false
  when: not idm_service_fixed

- name: validate its fixed
  assert:
    that: idm_output.stdout is search ('-Dlog4j2.formatMsgNoLookups=true') 
    fail_msg: "fix did not work"
    success_msg: "Fix applied successfully"
  when: not idm_service_fixed