---

- name: get analytics_service state
  shell: "grep -i jndilookup {{ jar_file }} | wc -l"
  register: analytics_output
  changed_when: false

- name: set check_varible
  set_fact:
    analytics_service_vulnerable: "{{ analytics_output.stdout | int }}"
  changed_when: false

- name: check for backup file
  stat:
    path: "{{ jar_file }}.bak"
  register: analytics_backup_stat
  changed_when: false

- name: backup jar file
  copy:
    src: "{{ jar_file }}"
    dest: "{{ jar_file }}.bak"
    remote_src: yes
  when: analytics_backup_stat.stat.exists == false

- name: Apply Fix
  command: zip -q -d {{ jar_file }} org/apache/logging/log4j/core/lookup/JndiLookup.class
  when: (analytics_output.stdout | int) !=  0
  notify: 
    - restart_analytics_service

- name: get analytics_service state
  shell: "grep -i jndilookup {{ jar_file }}  | wc -l"
  register: analytics_output
  changed_when: false
  when:  analytics_service_vulnerable !=0

- name: validate its fixed
  assert:
    that: (analytics_output.stdout | int) ==  0
    fail_msg: "fix did not work"
  when:  analytics_service_vulnerable !=0
